// Generated by dia2code
#ifndef RENDU__FENETRENOUVELELEVAGE__H
#define RENDU__FENETRENOUVELELEVAGE__H

#include <QWidget>
#include <memory>
#include <string>
#include <QPushButton>
#include <QString>

namespace Etats {
  class EtatsObserver;
  class Ferme;
  class Temps;
};
namespace moteur {
  class Moteur;
};
namespace Rendu {
  class FenetrePrincipale;
};
class QWidget;
class QObject;
#include "Etats/EtatsObserver.h"
#include "Etats/Ferme.h"
#include "Etats/Temps.h"
#include "moteur/Moteur.h"
#include "FenetrePrincipale.h"

namespace Rendu {

  /// class FenetreNouvelElevage - 
  class FenetreNouvelElevage : public QWidget {
    // Attributes
  public:
    std::shared_ptr<Etats::EtatsObserver> observer;
  private:
     Q_OBJECT //;
    std::shared_ptr<Etats::Ferme> ferme;
    //std::shared_ptr<Etats::Temps> temps;
    std::shared_ptr<moteur::Moteur> moteu;
    std::string nomElevage;
    int indexRace;
    FenetrePrincipale *fenetrePrincipale;
    // Operations
  public:
    FenetreNouvelElevage ();
    FenetreNouvelElevage (std::shared_ptr<Etats::Ferme> frm, std::shared_ptr<moteur::Moteur> mot, std::shared_ptr<Etats::EtatsObserver> observ);
    QPushButton* creationBoutonDansLayout (const QString& nom, QWidget* widgetParent, QLayout* layoutParent, const char* signal, QObject* receiver, const char* slot, bool enabled);
    ~FenetreNouvelElevage ();
    void setFenetrePrincipale (FenetrePrincipale *fenPrin);
    public slots : void enregistrerNouvelElevage ();
    void setNomElevage (const QString &nom);
    void setIndexRace (int index);
  };

};

#endif
