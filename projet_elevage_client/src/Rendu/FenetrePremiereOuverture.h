// Generated by dia2code
#ifndef RENDU__FENETREPREMIEREOUVERTURE__H
#define RENDU__FENETREPREMIEREOUVERTURE__H

#include <QWidget>
#include <memory>
#include <QDoubleValidator>
#include <QPushButton>
#include <QString>

namespace Etats {
  class Ferme;
  class Temps;
};
namespace moteur {
  class Moteur;
};
namespace Etats {
  class EtatsObserver;
};
namespace Rendu {
  class FenetrePrincipale;
};
class QWidget;
class QObject;
#include "Etats/Ferme.h"
#include "Etats/Temps.h"
#include "moteur/Moteur.h"
#include "Etats/EtatsObserver.h"
#include "FenetrePrincipale.h"

namespace Rendu {

  /// class FenetrePremiereOuverture - 
  class FenetrePremiereOuverture : public QWidget {
    // Attributes
  private:
     Q_OBJECT //;
    std::shared_ptr<Etats::Ferme> ferme;
    //std::shared_ptr<Etats::Temps> temps;
    std::shared_ptr<moteur::Moteur> moteu;
    std::shared_ptr<Etats::EtatsObserver> observer;
    FenetrePrincipale *fenetrePrincipale;
    QDoubleValidator* validateur = new QDoubleValidator(0, 1000000000, 2, this);
    double budget = -1;
    double emprunts = -1;
    int mois;
    int annee = 2016;
    // Operations
  public:
    FenetrePremiereOuverture ();
    FenetrePremiereOuverture (std::shared_ptr<Etats::Ferme> frm, std::shared_ptr<moteur::Moteur> mot, FenetrePrincipale *fenPrin, std::shared_ptr<Etats::EtatsObserver> obs);
    // FenetrePremiereOuverture (Ferme* ferme, Temps* temps);
    ~FenetrePremiereOuverture ();
    QPushButton* creationBoutonDansLayout (const QString& nom, QWidget* widgetParent, QLayout* layoutParent, const char* signal, QObject* receiver, const char* slot, bool enabled);
    double getBudget ();
    double getEmprunts ();
    public slots : void annulation ();
    void enregistrer();// (double budg, double empr, int ms, int an);
    void setBudget (const QString& text);
    void setEmprunts (const QString& text);
    void setMois (int ms);
    void setAnnee (const QString& text);
  };

};

#endif
