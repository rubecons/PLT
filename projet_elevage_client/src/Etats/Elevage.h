// Generated by dia2code
#ifndef ETATS__ELEVAGE__H
#define ETATS__ELEVAGE__H

#include <string>
#include <memory>
#include <vector>

namespace Etats {
  class Race;
  class Temps;
  class Ferme;
  class Animal;
}

#include "Race.h"
#include "Temps.h"
#include "Ferme.h"
#include "Animal.h"
#include "EtatElevage.h"

namespace Etats {

  /// class Elevage - 
  class Elevage {
    // Associations
    Etats::EtatElevage etat;
    Etats::Race regroupe;
    Etats::Animal* compose;
    // Attributes
  public:
    int incrementNbAnimaux = 0;
  private:
    std::string nomElevage;
    std::string idElevage;
    std::shared_ptr<Race> raceElevage;
    std::vector<std::shared_ptr<Animal>> animauxElevage;
    //std::shared_ptr<Temps> temps;
    std::shared_ptr<Ferme> ferme;
    // Operations
  public:
    Elevage ();
    Elevage (std::string nom, std::shared_ptr<Race> race, std::shared_ptr<Ferme> frm);
    ~Elevage ();
    void rajouterAnimalListe (std::shared_ptr<Animal> animal);
    void supprimerAnimalListe (const std::string & IDanimal, bool choixVente);
    std::string getIdElevage ();
    std::vector<std::shared_ptr<Animal>> getAnimaux ();
    EtatElevage getEtat ();
    std::shared_ptr<Ferme> getFerme ();
    std::string getNomElevage ();
    std::shared_ptr<Race> getRace ();
    //std::shared_ptr<Temps> getTemps ();
    void setEtat (EtatElevage state);
    void setFerme (std::shared_ptr<Ferme> frm);
    void setNomElevage (std::string nom);
    void setRace (std::shared_ptr<Race> race);
    //void setTemps (std::shared_ptr<Temps> tps);
  };

};

#endif
