// Generated by dia2code
#ifndef ETATS__ETATSOBSERVER__H
#define ETATS__ETATSOBSERVER__H

#include <mutex>
#include <list>
#include <memory>

namespace Etats {
  class Ferme;
  class Temps;
  class NotificationChangementEtat;
}

#include "Ferme.h"
#include "Temps.h"
#include "NotificationChangementEtat.h"

namespace Etats {

  /// class EtatsObserver - 
  class EtatsObserver {
    // Associations
    // Attributes
  private:
    std::mutex mutexNotification;
    std::list<std::shared_ptr<NotificationChangementEtat>> mesNotifications;
    std::shared_ptr<Ferme> ferme;
    //std::shared_ptr<Temps> temps;
    // Operations
  public:
    EtatsObserver ();
    void ajouterNotifications (std::shared_ptr<NotificationChangementEtat> notif);
    void actualiserRendu ();
    void setFerme (std::shared_ptr<Ferme> frm);
    //void setTemps (std::shared_ptr<Temps> tps);
  };

};

#endif
